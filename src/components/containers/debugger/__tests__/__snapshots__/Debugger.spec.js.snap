// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Debugger> Enzyme Shallow renders as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Debugger
    resetLogin={[Function]}
    user={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Styled(ViewNB)
          style={
            Object {
              "alignSelf": "center",
              "marginTop": 50,
            }
          }
        >
          <Styled(Text)>
            User Logged : 
          </Styled(Text)>
        </Styled(ViewNB)>,
        <Styled(ViewNB)
          style={
            Object {
              "alignSelf": "center",
              "marginTop": 50,
            }
          }
        >
          <Styled(Button)
            block={true}
            danger={true}
            iconLeft={true}
            onPress={[Function]}
            style={
              Object {
                "padding": 10,
              }
            }
          >
            <Styled(Icon)
              name="alert"
            />
            <Styled(Text)>
              RESET APP
            </Styled(Text)>
          </Styled(Button)>
        </Styled(ViewNB)>,
      ],
      "contentContainerStyle": Object {
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
      },
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(Text)>
            User Logged : 
          </Styled(Text)>,
          "style": Object {
            "alignSelf": "center",
            "marginTop": 50,
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              "User Logged : ",
              undefined,
            ],
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Array [
            "User Logged : ",
            undefined,
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(Button)
            block={true}
            danger={true}
            iconLeft={true}
            onPress={[Function]}
            style={
              Object {
                "padding": 10,
              }
            }
          >
            <Styled(Icon)
              name="alert"
            />
            <Styled(Text)>
              RESET APP
            </Styled(Text)>
          </Styled(Button)>,
          "style": Object {
            "alignSelf": "center",
            "marginTop": 50,
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "block": true,
            "children": Array [
              <Styled(Icon)
                name="alert"
              />,
              <Styled(Text)>
                RESET APP
              </Styled(Text)>,
            ],
            "danger": true,
            "iconLeft": true,
            "onPress": [Function],
            "style": Object {
              "padding": 10,
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "name": "alert",
                "virtual": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "RESET APP",
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "RESET APP",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(ViewNB)
            style={
              Object {
                "alignSelf": "center",
                "marginTop": 50,
              }
            }
          >
            <Styled(Text)>
              User Logged : 
            </Styled(Text)>
          </Styled(ViewNB)>,
          <Styled(ViewNB)
            style={
              Object {
                "alignSelf": "center",
                "marginTop": 50,
              }
            }
          >
            <Styled(Button)
              block={true}
              danger={true}
              iconLeft={true}
              onPress={[Function]}
              style={
                Object {
                  "padding": 10,
                }
              }
            >
              <Styled(Icon)
                name="alert"
              />
              <Styled(Text)>
                RESET APP
              </Styled(Text)>
            </Styled(Button)>
          </Styled(ViewNB)>,
        ],
        "contentContainerStyle": Object {
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
        },
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Text)>
              User Logged : 
            </Styled(Text)>,
            "style": Object {
              "alignSelf": "center",
              "marginTop": 50,
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "User Logged : ",
                undefined,
              ],
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Array [
              "User Logged : ",
              undefined,
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Button)
              block={true}
              danger={true}
              iconLeft={true}
              onPress={[Function]}
              style={
                Object {
                  "padding": 10,
                }
              }
            >
              <Styled(Icon)
                name="alert"
              />
              <Styled(Text)>
                RESET APP
              </Styled(Text)>
            </Styled(Button)>,
            "style": Object {
              "alignSelf": "center",
              "marginTop": 50,
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "block": true,
              "children": Array [
                <Styled(Icon)
                  name="alert"
                />,
                <Styled(Text)>
                  RESET APP
                </Styled(Text)>,
              ],
              "danger": true,
              "iconLeft": true,
              "onPress": [Function],
              "style": Object {
                "padding": 10,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "name": "alert",
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "RESET APP",
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "RESET APP",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
